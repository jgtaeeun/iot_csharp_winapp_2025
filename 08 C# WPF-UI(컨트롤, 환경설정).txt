1. WPF 애플리케이션 with MahApps
1-1)준비과정
Nuget패키지 관리자에서 MahApps.Metro 설치

App.xaml 코드 수정
<Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <!-- Theme setting -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Light.Blue.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>

MainWindow.xaml 코드 수정
<mah:MetroWindow x:Class="WpfStudyApp01.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:mah ="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks" 
        xmlns:local="clr-namespace:WpfStudyApp01"
        mc:Ignorable="d"
        Title="MahApps.Metro" Height="350" Width="600">
    </mah:MetroWindow>

MainWindow.xaml.cs 코드 수정
using MahApps.Metro.Controls;
public partial class MainWindow : MetroWindow


1-2. MahApps컨트롤
-아이콘 넣기
  <mah:MetroWindow x:Class="WpfStudyApp01.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:mah ="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks" 
        xmlns:local="clr-namespace:WpfStudyApp01"
        mc:Ignorable="d"
        Title="MahApps.Metro" Height="350" Width="600">
        <mah:MetroWindow.IconTemplate>
            <DataTemplate>
                <iconPacks:PackIconIonicons Kind="AlarmiOS" Margin="10,7,0,0" Foreground="White"/>
            </DataTemplate>
        </mah:MetroWindow.IconTemplate>

- GroupBox(Header) + Grid(Grid>Grid.RowDefinitions>RowDefinition)
- StackPanel(Orientation)
- ProgressBar (Maximum, Minimum, Value)
- mah:MetroProgressBar (Maximum, Minimum, Value)
- mah:ProgressRing
- Slider(Maximum, Minimum, mah:SliderHelper.ChangeValueBy="LargeChange"
          mah:SliderHelper.EnableMouseWheel="MouseHover")

-TabControl, TabItem(Header)
<TabControl SelectedIndex="1"  
                mah:TabControlHelper.Underlined="SelectedTabItem"
                mah:HeaderedControlHelper.HeaderFontSize="12"
                mah:HeaderedControlHelper.HeaderFontWeight="Bold">   
        <TabItem Header="Tab1">
            <StackPanel>
                <TextBox Text="야옹"/>
                <TextBox Text="테스트" 
                    mah:TextBoxHelper.AutoWatermark="True"
                    mah:TextBoxHelper.ClearTextButton="True"/>
            </StackPanel>
        </TabItem>
        <TabItem Header="Tab2">
            <Canvas>
                <Ellipse Width="100" Height="100" Fill="Red"></Ellipse>
            </Canvas>
        </TabItem>
</TabControl>

2. WPF-UI Brink Project with WPF-UI
2-1)준비과정
Nuget패키지 관리자에서 WPF-UI 설치
visual studio extension에서 WPF-UI 설치하기 누르고 VS닫고 재시작

App.xaml 코드 수정
```csharp
        private static readonly IHost _host = Host
        .CreateDefaultBuilder()
        .ConfigureAppConfiguration(c => { c.SetBasePath(Path.GetDirectoryName(AppContext.BaseDirectory)); })
        .ConfigureServices((context, services) =>
        {
            //throw new NotImplementedException("No service or window was registered.");
            //Singleton 디자인패턴 방식으로 MainWindow 등록
            services.AddSingleton<MainWindow>();
        }).Build();

    private async void OnStartup(object sender, StartupEventArgs e)
        {
            await _host.StartAsync();
            //MainWindow 인스턴스 생성
            var mainWindow = _host.Services.GetRequiredService<MainWinow>();
            mainWindow.Show();
        }
        ```

MainWindow.xaml ★창 생성★ 및 코드 수정
<ui:FluentWindow x:Class="UiDesktopApp01.MainWindow"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml" 
                xmlns:local="clr-namespace:UiDesktopApp01"
                mc:Ignorable="d"
                Title="MainWindow" Height="450" Width="800">
            <Grid>
                <ui:SymbolIcon Symbol="Fluent24"/>
            </Grid>
</FluentWindow>

MainWindow.xaml.cs 코드 수정
 using Wpf.Ui.Controls;
public partial class MainWindow : FluentWindow

 ★ALT + F4로 WFP 실행창 닫기

2-2) WPF-UI 컨트롤
-ui:TextBox
-ui:PasswordBox
-ui:NumberBox
-ui:Button

-ui:InfoBar
<ui:InfoBar Title="Title" Message="Essential message." IsOpen="True"  Severity="Success" Margin="10"/>

-TabControl
 <TabControl>          
        <TabItem  Width="90" >
            <TabItem.Header>
                <StackPanel Orientation="Horizontal">
                    <ui:SymbolIcon Symbol="Tabs20" Margin="0,0,5,0"/>
                    <Label Content="Tab1"/>
                </StackPanel>
            </TabItem.Header>
            <ProgressBar Minimum="0" Maximum="100" Value="50" Height="20" IsIndeterminate="True" Margin="2"></ProgressBar>
        </TabItem>
 </TabControl>  
 
-아이콘 넣기
<ui:PasswordBox Grid.Row="3" Grid.Column="1" PlaceholderText="Password..." Margin="2">
        <ui:PasswordBox.Icon>
            <ui:SymbolIcon Symbol="Password24"/>
        </ui:PasswordBox.Icon>
</ui:PasswordBox>


